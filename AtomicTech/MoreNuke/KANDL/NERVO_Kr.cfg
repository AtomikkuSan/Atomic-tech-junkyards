PART
{
	name = NERVO_Kryptonite
	module = Part
	author = Porkjet, Snark, Atomikku

	MODEL
	{
		model = AtomicTech/MoreNuke/KANDL/model
	}	
	rescaleFactor = 3

	node_stack_top = 0.0, 0.4, 0.0, 0.0, 1.0, 0.0, 0
	node_stack_bottom = 0.0, -0.5625, 0.0, 0.0, -1.0, 0.0, 0
	node_attach = 0.0, 0.4, 0.0, 0.0, 1.0, 0.0, 0

	TechRequired = nuclearPropulsion
	entryCost = 43750
	cost = 8500
	category = Engine
	subcategory = 0
	title = AT-TREL "NERVO KR" Experimental Solid Core Thermonuclear Rocket Engine
	manufacturer = AtomicTech Inc.
	description = The direct predecessor of the AT-TREL "NERVO" Solid Core Thermonuclear Rocket Engine, the AT-TREL "NERVO KR" Experimental Solid Core Thermonuclear Rocket Engine, originally the JTR-XPL "Eeloid" Solid Core Thermonuclear Reactor Core Engine, is an experimental prototype that ran a lengthy series of tests in the post Kerbin Konflict II, Kold War Era, proving that Thermonuclear Rocket engines were a viable propulsion solution. PorkWorks would later adapt this technology into the KANDL engine while Jebediah Kerman's Junkyard and Spacecraft Parts Co. would recase the engine and create the wildly popular LV-N "Nerv" Atomic Rocket Motor and AtomicTech Inc. would adapt the Nerv to create the NERVO. Later, as soon as AtomicTech Inc. purchased the rights to the J-Tech Catalouge, the JTR-XPL "Eeloid" Solid Core Thermonuclear Reactor Core Engine would once again see the light of day again as the AT-TREL "NERVO KR" Experimental Solid Core Thermonuclear Rocket Engine, ready for flight.

  //AtomicTech's Notes:The name NERVO XR was directly inspired by the NERVA XE, the second NERVA engine ever built. This suffix KR stands for Kryponite or Kerbin Reactodyne. 

	attachRules = 1,0,1,0,0

	mass = 4

	heatConductivity = 0.01
	emissiveConstant = 0.99

	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 12
	maxTemp = 2750
	bulkheadProfiles = size0
	tags = #autoLOC_500438 // same as LV-N

	EFFECTS
	{
		running_closed
		{
			AUDIO
			{
				channel = Ship
				clip = sound_rocket_hard
				volume = 0.0 0.0
				volume = 0.1 0.25
				volume = 1 0.5
				pitch = 0.0 0.3
				pitch = 1 0.6
				loop = true
			}
			MODEL_MULTI_PARTICLE
			{
				name = flame
				modelName = AtomicTech/MoreNuke/FX/flame
				transformName = thrustTransform
				emission = 0.0 0.0 0 0
				emission = 0.5 1.0 0 0
				energy = 0 0.5
				energy = 1 1.0
				speed = 0.2 0.1
				speed = 1.0 1.0
				localScale = 0.7, 0.7, 0.7
			}
		}
		engage
		{
			AUDIO
			{
				channel = Ship
				clip = sound_vent_soft
				volume = 0.5
				pitch = 3.0
				loop = false
			}
		}
		flameout
		{
			PREFAB_PARTICLE
			{
				prefabName = fx_exhaustSparks_flameout_2
				transformName = thrustTransform
				oneShot = true
			}
			AUDIO
			{
				channel = Ship
				clip = sound_explosion_low
				volume = 1.0
				pitch = 2.0
				loop = false
			}
		}
	}

	MODULE
	{
		name = ModuleEnginesFX
		engineID = Lightbulb
		runningEffectName = running_closed
		thrustVectorTransformName = thrustTransform
		exhaustDamage = True
		ignitionThreshold = 0.1
		EngineType = Nuclear
		minThrust = 0
		maxThrust = 250
		heatProduction = 300
		fxOffset = 0, 0, -0.55
		PROPELLANT
		{
			name = LiquidFuel
			ratio = 1.05
			DrawGauge = True
		}
		atmosphereCurve
		{
			key = 0 795
			key = 1 275
      key = 3 100
			key = 5 0.001
		}	
	}

	MODULE
	{
		name = ModuleJettison
		jettisonName = Fairing
		bottomNodeName = bottom
		isFairing = False
		jettisonedObjectMass = 0.1
		jettisonForce = 1
		jettisonDirection = 0 0 1
	}

	MODULE
	{
		name = ModuleAnimateHeat
		ThermalAnim = KANDL_overheat
	}

	MODULE
	{
		name = ModuleGimbal
		gimbalResponseSpeed = 25
		useGimbalResponseSpeed = true
		gimbalTransformName = Gimbal
		gimbalRange = 0.5
	}

	MODULE
	{
		name = ModuleAlternator	
		RESOURCE
		{
			name = ElectricCharge
			rate = 3
		}
	}

	MODULE
	{
		name = ModuleTestSubject

		// nowhere: 0, srf: 1, ocean: 2, atmo: 4, space: 8
		environments = 8

		useStaging = False
		useEvent = True
	}

	MODULE
	{
		name = FXModuleLookAtConstraint
		CONSTRAINLOOKFX
		{
			targetName = Anchor1
			rotatorsName = Piston1
		}

		CONSTRAINLOOKFX
		{
			targetName = Anchor2
			rotatorsName = Piston2
		}

		CONSTRAINLOOKFX
		{
			targetName = Anchor3
			rotatorsName = Piston3
		}
	}
}